    // Inverse strategy stats  
    inverse_signals = 0
    inverse_wins = 0
    inverse_total_pnl = 0.0
    
    total_signals = array.size(completed_signals)
    
    if total_signals > 0
        for i = 0 to total_signals - 1
            strategy = array.get(strategy_types, i)
            pnl = array.get(signal_pnl, i)
            success = array.get(signal_success, i)
            
            if strategy == "normal"
                normal_signals += 1
                normal_total_pnl += pnl
                if success
                    normal_wins += 1
            else if strategy == "inverse"  
                inverse_signals += 1
                inverse_total_pnl += pnl
                if success
                    inverse_wins += 1
    
    normal_win_rate = normal_signals > 0 ? normal_wins / normal_signals * 100 : 0
    normal_avg_pnl = normal_signals > 0 ? normal_total_pnl / normal_signals : 0
    
    inverse_win_rate = inverse_signals > 0 ? inverse_wins / inverse_signals * 100 : 0
    inverse_avg_pnl = inverse_signals > 0 ? inverse_total_pnl / inverse_signals : 0
    
    win_rate_advantage = inverse_win_rate - normal_win_rate
    pnl_advantage = inverse_avg_pnl - normal_avg_pnl
    
    [normal_signals, normal_win_rate, normal_avg_pnl, inverse_signals, inverse_win_rate, inverse_avg_pnl, win_rate_advantage, pnl_advantage, total_signals]

[norm_signals, norm_wr, norm_pnl, inv_signals, inv_wr, inv_pnl, wr_advantage, pnl_advantage, total_sigs] = calculate_research_stats()

// === VISUAL RESEARCH TABLE ===

var table research_table = table.new(position.top_right, 3, 10, bgcolor=color.new(color.black, 85), border_width=1)

if barstate.islast
    // Headers
    table.cell(research_table, 0, 0, "🔬 FIBONACCI INVERSE RESEARCH", text_color=color.yellow, text_size=size.small)
    table.cell(research_table, 1, 0, "NORMAL", text_color=color.white, text_size=size.small)
    table.cell(research_table, 2, 0, "INVERSE", text_color=color.white, text_size=size.small)
    
    // Statistics
    table.cell(research_table, 0, 1, "Total Signals", text_color=color.white, text_size=size.tiny)
    table.cell(research_table, 1, 1, str.tostring(norm_signals), text_color=color.white, text_size=size.tiny)
    table.cell(research_table, 2, 1, str.tostring(inv_signals), text_color=color.white, text_size=size.tiny)
    
    table.cell(research_table, 0, 2, "Win Rate", text_color=color.white, text_size=size.tiny)
    table.cell(research_table, 1, 2, str.tostring(norm_wr, "#.1") + "%", 
               text_color=norm_wr >= 60 ? color.green : norm_wr >= 40 ? color.orange : color.red, text_size=size.tiny)
    table.cell(research_table, 2, 2, str.tostring(inv_wr, "#.1") + "%", 
               text_color=inv_wr >= 60 ? color.green : inv_wr >= 40 ? color.orange : color.red, text_size=size.tiny)
    
    table.cell(research_table, 0, 3, "Avg PnL", text_color=color.white, text_size=size.tiny)
    table.cell(research_table, 1, 3, str.tostring(norm_pnl, "#.2") + "%", 
               text_color=norm_pnl >= 0 ? color.green : color.red, text_size=size.tiny)
    table.cell(research_table, 2, 3, str.tostring(inv_pnl, "#.2") + "%", 
               text_color=inv_pnl >= 0 ? color.green : color.red, text_size=size.tiny)
    
    table.cell(research_table, 0, 4, "────────────", text_color=color.gray, text_size=size.tiny)
    table.cell(research_table, 1, 4, "────────", text_color=color.gray, text_size=size.tiny)
    table.cell(research_table, 2, 4, "────────", text_color=color.gray, text_size=size.tiny)
    
    table.cell(research_table, 0, 5, "🔬 RESEARCH CONCLUSION", text_color=color.yellow, text_size=size.tiny)
    table.cell(research_table, 1, 5, "Advantage", text_color=color.white, text_size=size.tiny)
    
    advantage_text = wr_advantage > 10 ? "✅ STRONG" : wr_advantage > 5 ? "✅ GOOD" : wr_advantage > 0 ? "🟡 SLIGHT" : "❌ NONE"
    advantage_color = wr_advantage > 10 ? color.lime : wr_advantage > 5 ? color.green : wr_advantage > 0 ? color.yellow : color.red
    
    table.cell(research_table, 2, 5, advantage_text, text_color=advantage_color, text_size=size.tiny)
    
    table.cell(research_table, 0, 6, "Sample Size", text_color=color.white, text_size=size.tiny)
    significance = total_sigs >= 50 ? "✅ SIGNIFICANT" : total_sigs >= 20 ? "🟡 MODERATE" : "⚠️ SMALL"
    significance_color = total_sigs >= 50 ? color.green : total_sigs >= 20 ? color.yellow : color.orange
    table.cell(research_table, 1, 6, str.tostring(total_sigs), text_color=color.white, text_size=size.tiny)
    table.cell(research_table, 2, 6, significance, text_color=significance_color, text_size=size.tiny)

// === VISUAL SIGNALS ===

plotshape(normal_bullish_signal, "Normal Bullish", shape.triangleup, location.belowbar, color.green, size=size.small)
plotshape(normal_bearish_signal, "Normal Bearish", shape.triangledown, location.abovebar, color.red, size=size.small)
plotshape(new_inverse_bull, "Inverse Bull Signal", shape.diamond, location.belowbar, color.blue, size=size.normal)
plotshape(new_inverse_bear, "Inverse Bear Signal", shape.diamond, location.abovebar, color.purple, size=size.normal)

// === RESEARCH PLOTS ===

plot(norm_wr, "Normal Win Rate", color=color.blue, linewidth=1)
plot(inv_wr, "Inverse Win Rate", color=color.orange, linewidth=2)
plot(wr_advantage, "Win Rate Advantage", color=wr_advantage > 0 ? color.green : color.red, linewidth=1)

// === ALERTS ===

alertcondition(new_inverse_bull, title="Inverse Bullish Signal", 
               message="🔬 Inverse research: Bullish divergence με RSI=" + str.tostring(rsi_source, "#.1") + " - Consider SHORT με Fibonacci inverse target")
               
alertcondition(new_inverse_bear, title="Inverse Bearish Signal",
               message="🔬 Inverse research: Bearish divergence με RSI=" + str.tostring(rsi_source, "#.1") + " - Consider LONG με Fibonacci inverse target")
               
alertcondition(wr_advantage > 15 and total_sigs >= 20, title="Strong Inverse Advantage",
               message="🚀 Research discovery: Inverse strategy shows " + str.tostring(wr_advantage, "#.1") + "% advantage over " + str.tostring(total_sigs) + " signals!")
               
alertcondition(total_sigs == 50, title="Significant Sample Size Reached",
               message="📊 Research milestone: 50 signals analyzed. Win rate advantage: " + str.tostring(wr_advantage, "#.1") + "%")

// ================================
// FIBONACCI INVERSE RESEARCH TRACKER COMPLETE
// For testing the theory of reverse trading based on Fibonacci projections
// ================================
